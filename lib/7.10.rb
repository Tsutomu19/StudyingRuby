7.10　クラス定義やRubyの言語仕様に関する高度な話題

何か困った時にこの節を読み返せるように内容をざっくりと頭のすみにとどめておく


7.10.1 エイリアスメソッドの定義

Stringクラスのsizeメソッドはlengthメソッドのエイリアスメソッドです。

エイリアスメソッドを定義する場合はaliasキーワードを呼び出す梅は先に元のメソッドを定義して置かないとエラーになります。

以下はhelloメソッドのエイリアスメソッドとしてgreetingメソッドを定義する例です。

class User

    def hello
        'Hello!'
    end

    alias greeting hello 
end

user = User.new
user.hello 
user.greeting 



7.10.2　メソッドの削除　
頻繁に使う機能ではありませんがrubyではメソッドの定義を後から削除することもできます。
メソッドの定義を後から削除することもできます。


class User 
    undef freeze 
end
user = User.new 

user.freeze 


7.10.3 ネストしたクラスの定義

クラス定義する場合、クラスの内部に別のクラスを定義することも出来ます。

class 外側のクラス
    class 内側のクラス
    end
end


7.10.4 演算子の挙動を独自に再定義する


Rubyでは＝で終わるメソッドを再定義することができます。=で終わるメソッドは変数に代入する形式でそのメソッドを呼ぶことができます。


class User
    def name = (value)
        @name = value
    end
end

user = User.new
user.name = 'Alice'


7.10.5 等値を判断するメソッドや演算子を理解する

ところで==演算子の話が出てきたのでここで同じような用途のメソッドや演算子の役割について整理。

if文などで同じ値かどうかを比較する場合は==を使うことが多いですが、Rubyでは等値を判断するためのメソッドや演算子が他にもあります。
    具体的には以下の4つです。
    
    
    equal?
    ==
    eql?
    ===
    
    
    
    7.10.6　オープンクラスとモンキーパッチ
    
    Rubyはクラスの継承に制限がありません。StringクラスやArrayクラスなど組み込みライブラリのクラスであっても
    継承して独自のクラスを定義することができます。
    
    
    7.10.7　特異メソッド
    Rubyはオープンクラスやモンキーパッチによって、既存クラスを拡張したり挙動を変更したりできると説明しました。
    
    さらにRubyではクラス単位ではなくオブジェクト単位で挙動を変えることもできます。
    
    7.10.8　クラスメソッドは特異メソッドの一種


    7.11

    この賞のまとめ

    オブジェクト指向プログラミングの基礎知識
    クラスの定義
    selfキーワード
    クラスの継承
    メソッドの公開レベル
    定数
    様々な種類の変数
    クラス定義やRubyの言語仕様に関する高度な話題

    